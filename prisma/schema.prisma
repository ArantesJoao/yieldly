datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

enum Role {
  admin
  member
  viewer
}

enum TransactionDirection {
  inflow
  outflow
}

model User {
  id        BigInt   @id @default(autoincrement())
  email     String   @unique
  role      Role     @default(member)
  locale    String   @default("pt-BR")
  timezone  String   @default("America/Sao_Paulo")
  createdAt DateTime @default(now())

  accounts         Account[]
  transactionTypes TransactionType[]
}

model Account {
  id          BigInt   @id @default(autoincrement())
  ownerUserId BigInt
  institution String
  label       String
  createdAt   DateTime @default(now())

  owner     User                  @relation(fields: [ownerUserId], references: [id], onDelete: Cascade)
  ledger    LedgerEntry[]
  summaries DailyAccountSummary[]

  @@index([ownerUserId])
}

model TransactionType {
  id          BigInt               @id @default(autoincrement())
  ownerUserId BigInt
  name        String
  direction   TransactionDirection

  owner  User          @relation(fields: [ownerUserId], references: [id], onDelete: Cascade)
  ledger LedgerEntry[]

  @@unique([ownerUserId, name])
  @@index([ownerUserId])
}

model LedgerEntry {
  id                BigInt   @id @default(autoincrement())
  accountId         BigInt
  date              DateTime
  transactionTypeId BigInt
  amountMinor       Int
  note              String?
  createdAt         DateTime @default(now())

  account         Account         @relation(fields: [accountId], references: [id], onDelete: Cascade)
  transactionType TransactionType @relation(fields: [transactionTypeId], references: [id])

  @@index([accountId, date])
  @@index([transactionTypeId, date])
  @@index([accountId, transactionTypeId, date])
}

model DailyAccountSummary {
  id                 BigInt   @id @default(autoincrement())
  accountId          BigInt
  date               DateTime
  balanceEndMinor    Int
  yieldsMinor        Int
  depositsMinor Int

  account Account @relation(fields: [accountId], references: [id], onDelete: Cascade)

  @@unique([accountId, date])
  @@index([date])
}
